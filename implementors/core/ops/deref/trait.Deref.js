(function() {var implementors = {};
implementors["aligned"] = [{"text":"impl&lt;A, T&gt; Deref for Aligned&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Alignment,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ?Sized,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["cortex_m"] = [{"text":"impl Deref for MPU","synthetic":false,"types":[]},{"text":"impl Deref for NVIC","synthetic":false,"types":[]},{"text":"impl Deref for SCB","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; Deref for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["heapless"] = [{"text":"impl&lt;N&gt; Deref for String&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;u8&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, N&gt; Deref for Vec&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, N, K, '_&gt; Deref for PeekMut&lt;'_, T, N, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Ord,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Kind,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rtic_core"] = [{"text":"impl&lt;'a, T&gt; Deref for Exclusive&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["stm32f0"] = [{"text":"impl Deref for CRC","synthetic":false,"types":[]},{"text":"impl Deref for GPIOF","synthetic":false,"types":[]},{"text":"impl Deref for GPIOD","synthetic":false,"types":[]},{"text":"impl Deref for GPIOC","synthetic":false,"types":[]},{"text":"impl Deref for GPIOB","synthetic":false,"types":[]},{"text":"impl Deref for GPIOE","synthetic":false,"types":[]},{"text":"impl Deref for GPIOA","synthetic":false,"types":[]},{"text":"impl Deref for SPI1","synthetic":false,"types":[]},{"text":"impl Deref for SPI2","synthetic":false,"types":[]},{"text":"impl Deref for PWR","synthetic":false,"types":[]},{"text":"impl Deref for I2C1","synthetic":false,"types":[]},{"text":"impl Deref for I2C2","synthetic":false,"types":[]},{"text":"impl Deref for IWDG","synthetic":false,"types":[]},{"text":"impl Deref for WWDG","synthetic":false,"types":[]},{"text":"impl Deref for TIM1","synthetic":false,"types":[]},{"text":"impl Deref for TIM2","synthetic":false,"types":[]},{"text":"impl Deref for TIM14","synthetic":false,"types":[]},{"text":"impl Deref for TIM6","synthetic":false,"types":[]},{"text":"impl Deref for TIM7","synthetic":false,"types":[]},{"text":"impl Deref for EXTI","synthetic":false,"types":[]},{"text":"impl Deref for DMA1","synthetic":false,"types":[]},{"text":"impl Deref for DMA2","synthetic":false,"types":[]},{"text":"impl Deref for RCC","synthetic":false,"types":[]},{"text":"impl Deref for SYSCFG","synthetic":false,"types":[]},{"text":"impl Deref for ADC","synthetic":false,"types":[]},{"text":"impl Deref for USART1","synthetic":false,"types":[]},{"text":"impl Deref for USART2","synthetic":false,"types":[]},{"text":"impl Deref for USART3","synthetic":false,"types":[]},{"text":"impl Deref for USART4","synthetic":false,"types":[]},{"text":"impl Deref for USART6","synthetic":false,"types":[]},{"text":"impl Deref for USART7","synthetic":false,"types":[]},{"text":"impl Deref for USART8","synthetic":false,"types":[]},{"text":"impl Deref for USART5","synthetic":false,"types":[]},{"text":"impl Deref for RTC","synthetic":false,"types":[]},{"text":"impl Deref for TIM15","synthetic":false,"types":[]},{"text":"impl Deref for TIM16","synthetic":false,"types":[]},{"text":"impl Deref for TIM17","synthetic":false,"types":[]},{"text":"impl Deref for TSC","synthetic":false,"types":[]},{"text":"impl Deref for CEC","synthetic":false,"types":[]},{"text":"impl Deref for FLASH","synthetic":false,"types":[]},{"text":"impl Deref for DBGMCU","synthetic":false,"types":[]},{"text":"impl Deref for USB","synthetic":false,"types":[]},{"text":"impl Deref for CRS","synthetic":false,"types":[]},{"text":"impl Deref for CAN","synthetic":false,"types":[]},{"text":"impl Deref for DAC","synthetic":false,"types":[]},{"text":"impl Deref for STK","synthetic":false,"types":[]},{"text":"impl Deref for TIM3","synthetic":false,"types":[]},{"text":"impl Deref for COMP","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()